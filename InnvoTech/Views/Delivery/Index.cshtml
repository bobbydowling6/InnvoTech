@using Microsoft.AspNetCore.Mvc.ModelBinding;
@using InnvoTech.Models;
@model InnvoTech.Models.DeliveryViewModel
@{
    ViewData["Title"] = "Index";
    var states = (new string[] { "", "Alabama", "Alaska", "Arkansas", "Arkansas", "California", "Colorado", "Connecticut", "Delaware",
    "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
    "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey",
    "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
    "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming" }).Select(x => new SelectListItem { Text = x, Value = x });
}

@if (!this.ViewContext.ModelState.IsValid)
{
    <div asp-validation-summary="All" class="alert alert-danger"></div>
}
<form method="post" asp-action="Index" asp-controller="Delivery">
    <div class="form-group">
        <label asp-for="Address"></label>
        <input asp-for="Address" class="@(ViewData.ModelState.ContainsKey("Address") && ViewData.ModelState.First(x => x.Key == "Address").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" placeholder="address" />
        <span asp-validation-for="Address" class="invalid-feedback"></span>
    </div>
    <div class="form-group">
        <label for="inputAddress2">Secondary Address</label>
        <input type="text" class="form-control" id="inputAddress2" placeholder="Apartment, studio, or floor">
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label asp-for="City"></label>
            <input asp-for="City" placeholder="city" class="@(ViewData.ModelState.ContainsKey("City") && ViewData.ModelState.First(x => x.Key == "City").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" />
            <span asp-validation-for="City" class="invalid-feedback"></span>
        </div>
        <div class="form-group col-md-4">
            <label asp-for="State"></label>
            <select asp-for="State" asp-items="states" class="@(ViewData.ModelState.ContainsKey("State") && ViewData.ModelState.First(x => x.Key == "State").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")"></select>
            <span asp-validation-for="State" class="invalid-feedback"></span>

        </div>
        <div class="form-group col-md-2">
            <label asp-for="Zip"></label>
            <input asp-for="Zip" placeholder="zip code" class="@(ViewData.ModelState.ContainsKey("Zip") && ViewData.ModelState.First(x => x.Key == "Zip").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" />
            <span asp-validation-for="Zip" class="invalid-feedback"></span>

        </div>
    </div>
    <div class="form-group">
        <label asp-for="Date"></label>
        <input asp-for="Date" class="@(ViewData.ModelState.ContainsKey(" Date") && ViewData.ModelState.First(x=> x.Key == "Date").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" placeholder="Date" />
        <span asp-validation-for="Date" class="invalid-feedback"></span>
    </div>
    <button type="submit" class="btn btn-success">Submit</button>
</form>

