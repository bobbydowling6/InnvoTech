@using Microsoft.AspNetCore.Mvc.ModelBinding;
@using InnvoTech.Models;
@model InnvoTech.Models.DeliveryViewModel
@{
    ViewData["Title"] = "Index";
    var states = (new string[] { "", "Alabama", "Alaska", "Arkansas", "Arkansas", "California", "Colorado", "Connecticut", "Delaware",
"Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
"Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming" }).Select(x => new SelectListItem { Text = x, Value = x });
    var years = (new string[] {
        "",
        DateTime.Now.Year.ToString(),
        DateTime.Now.AddYears(1).Year.ToString(),
        DateTime.Now.AddYears(2).Year.ToString(),
        DateTime.Now.AddYears(3).Year.ToString(),
        DateTime.Now.AddYears(4).Year.ToString(),
        DateTime.Now.AddYears(5).Year.ToString(),
    }).Select(x => new SelectListItem { Text = x, Value = x });
}
@if (Model.CartProducts != null)
{
    <div class="row">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Price</th>
                </tr>
            </thead>
            @foreach (var item in Model.CartProducts)
            {
                <tr>
                    <td>@item.Products.Name</td>
                    <td>
                        <form asp-action="update" asp-controller="delivery" method="post" class="form-inline">
                            <input name="productId" value="@item.Products.Id" type="hidden" />                            
                            <input name="quantity" value="@item.Quantity" type="number" class="form-control-sm" /><input type="submit" value="Update Quantity" class="btn btn-info" />
                            </form>
                    </td>
                    <td>@((item.Products.Price ?? 0m).ToString("c"))</td>
                </tr>
            }
            <tfoot>
                <tr>
                    <th colspan="2">Subtotal</th>
                    <th>@Model.CartProducts.Sum(x => (x.Products.Price ?? 0m) * x.Quantity).ToString("c")</th>
                </tr>
            </tfoot>
        </table>
    </div>
}

@if (!this.ViewContext.ModelState.IsValid)
{
    <div asp-validation-summary="All" class="alert alert-danger"></div>
}
    <form method="post" asp-action="Index" asp-controller="Delivery" novalidate style="border:groove">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="ShippingAddress">Shipping Address</label>
                    <input asp-for="ShippingAddress" class="@(ViewData.ModelState.ContainsKey("ShippingAddress") && ViewData.ModelState.First(x => x.Key == "ShippingAddress").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" />
                    <span asp-validation-for="ShippingAddress" class="invalid-feedback"></span>
                </div>
                <div class="form-group">
                    <label for="inputAddress2">Secondary Address</label>
                    <input type="text" class="form-control" id="inputAddress2" placeholder="Apartment, studio, or floor">
                </div>
                <div class="form-group">
                    <label asp-for="ShippingCity">Shipping City</label>
                    <input asp-for="ShippingCity" class="@(ViewData.ModelState.ContainsKey("ShippingCity") && ViewData.ModelState.First(x => x.Key == "ShippingCity").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" />
                    <span asp-validation-for="ShippingCity" class="invalid-feedback"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ShippingState">Shipping State</label>
                    <select asp-for="ShippingState" asp-items="states" class="@(ViewData.ModelState.ContainsKey("ShippingState") && ViewData.ModelState.First(x => x.Key == "ShippingState").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")"></select>
                    <span asp-validation-for="ShippingState" class="invalid-feedback"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ShippingZip">Shipping Zip</label>
                    <input asp-for="ShippingZip" class="@(ViewData.ModelState.ContainsKey("ShippingZip") && ViewData.ModelState.First(x => x.Key == "ShippingZip").Value.ValidationState == ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" />
                    <span asp-validation-for="ShippingZip" class="invalid-feedback"></span>
                </div>
                <div class="row">
                    <div class="col">
                        <button class="btn btn-light" id="validateShipping">Validate Address</button>
                        <progress id="validating" style="display:none"></progress>
                    </div>
                    <div class="col">
                        <div class="alert alert-warning" id="shippingNotValidated">
                            Not Yet Validated
                        </div>
                        <div class="alert alert-success" id="shippingValid" style="display:none">
                            Valid
                        </div>
                        <div class="alert alert-danger" id="shippingInvalid" style="display:none">
                            Invalid
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="BillingAddress">Billing Address</label>
                    <input asp-for="BillingAddress" class="@(ViewData.ModelState.ContainsKey("BillingAddress") && ViewData.ModelState.FirstOrDefault(x => x.Key == "BillingAddress").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" required />
                    <span class="invalid-feedback">Address is required</span>
                </div>
                <div class="form-group">
                    <label asp-for="BillingCity">Billing City</label>
                    <input asp-for="BillingCity" class="@(ViewData.ModelState.ContainsKey("BillingCity") && ViewData.ModelState.FirstOrDefault(x => x.Key == "BillingCity").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" required />
                    <span class="invalid-feedback">City is required</span>
                </div>
                <div class="form-group">
                    <label asp-for="BillingState">Billing State</label>
                    <select asp-for="BillingState" asp-items="states" required class="@(ViewData.ModelState.ContainsKey("BillingState") && ViewData.ModelState.FirstOrDefault(x => x.Key == "BillingState").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")"></select>
                    <span asp-validation-for="BillingState" class="invalid-feedback"></span>
                </div>
                <div class="form-group">
                    <label asp-for="BillingZip">Billing Zip</label>
                    <input asp-for="BillingZip" required pattern="^\d{5}(?:[-\s]\d{4})?$" class="@(ViewData.ModelState.ContainsKey("BillingZip") && ViewData.ModelState.FirstOrDefault(x => x.Key == "BillingZip").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" />
                    <span asp-validation-for="BillingZip" class="invalid-feedback"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Date"></label>
                    <input asp-for="Date" type="date" value="@DateTime.Now.AddDays(3).ToString("MM/dd/yyyy")" required class="@(ViewData.ModelState.ContainsKey("Date") && ViewData.ModelState.FirstOrDefault(x => x.Key == "Date").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" placeholder="Date" />
                    <span asp-validation-for="Date" class="invalid-feedback"></span>
                </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="creditcardnumber">CreditCard Number</label>
                        <input asp-for="creditcardnumber" placeholder="4111111111111111" class="@(ViewData.ModelState.ContainsKey("creditcardnumber") && ViewData.ModelState.FirstOrDefault(x => x.Key == "creditcardnumber").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" required />
                        <span asp-validation-for="creditcardnumber" class="invalid-feedback"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="creditcardname">CreditCard Name</label>
                        <input asp-for="creditcardname" placeholder="John Cardholder" class="@(ViewData.ModelState.ContainsKey("creditcardname") && ViewData.ModelState.FirstOrDefault(x => x.Key == "creditcardname").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" required />
                    </div>
                    <div class="form-group">
                        <label asp-for="creditcardverificationvalue">CVV</label>
                        <input asp-for="creditcardverificationvalue" placeholder="123" class="@(ViewData.ModelState.ContainsKey("creditcardverificationvalue") && ViewData.ModelState.FirstOrDefault(x => x.Key == "creditcardverificationvalue").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" required />
                        <span asp-validation-for="creditcardverificationvalue" class="invalid-feedback"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="expirationmonth">Expiration Month</label>
                            <select asp-for="expirationmonth" class="@(ViewData.ModelState.ContainsKey("expirationmonth") && ViewData.ModelState.FirstOrDefault(x => x.Key == "expirationmonth").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" required>
                                <option value=""></option>
                                <option value="01">01</option>
                                <option value="02">02</option>
                                <option value="03">03</option>
                                <option value="04">04</option>
                                <option value="05">05</option>
                                <option value="06">06</option>
                                <option value="07">07</option>
                                <option value="08">08</option>
                                <option value="09">09</option>
                                <option value="10">10</option>
                                <option value="11">11</option>
                                <option value="12">12</option>
                            </select>
                        <br />
                        <div class="form-group">
                            <label asp-for="expirationyear">Expiration Year</label>
                                <select asp-for="expirationyear" asp-items="years" class="@(ViewData.ModelState.ContainsKey("expirationyear") && ViewData.ModelState.FirstOrDefault(x => x.Key == "expirationyear").Value.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid ? "form-control is-invalid" : "form-control")" required></select>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            @*</div>*@           
     </div>
</form>

@section Scripts{ 
    <script type="text/javascript">
        $("#validateShipping").click((event) => {
            $("#validateShipping").prop("disabled", "true");
            $("#validating").show();
            event.preventDefault();
            event.stopPropagation();
            var shippingAddress = $("#ShippingAddress").val();
            var shippingCity = $("#ShippingCity").val();
            var shippingState = $("#ShippingState").val();

            $.getJSON("/delivery/validateaddress?street=" + shippingAddress + "&state=" + shippingState + "&city" + shippingCity, (data) => {
                if (data.length > 0) {
                    $("#shippingInvalid").hide();
                    $("#shippingValid").show();
                } else {
                    $("#shippingInvalid").show();
                    $("#shippingValid").hide();
                }
                $("#validateShipping").removeProp("disabled");
                $("#validating").hide();
                console.log(data);
            })
            $("#shippingNotValidated").hide();

        })

    </script>
}